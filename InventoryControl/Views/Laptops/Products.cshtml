@model IEnumerable<InventoryControl.Models.Laptop>


<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Products";
}

<style>
    .card {
        /* Add shadows to create the "card" effect */
        box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);
        transition: 0.3s;
        width: 180px;
        min-height: 245px;
        margin-bottom: 10px;
        padding-bottom:10px;        
    }

        /* On mouse-over, add a deeper shadow */
        .card:hover {
            box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);
        }

    /* Add some padding inside the card container */
    .container {
        padding: 2px 16px;
    }

    img {
        border-radius: 5px 5px 0 0;
    }

    .click-link {
        cursor: pointer;
        font-style:italic;
    }

    .secondary{
        font-size:small;
        color:grey;
    }


    
</style>
<body onload="OrderLoad()">
    @{ var userChoiceLabel = (Session["UserChoice"] == "") ? "All" : Session["UserChoice"];}
    <h2>Products > @userChoiceLabel</h2>
    
    <div class="modal fade" id="myModal" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Your Previous Orders</h4>
                </div>
                <div class="modal-body">
                    <p id="order-items">Order error</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>

        </div>
    </div>
    <input type="hidden" class="btn btn-info btn-lg" data-toggle="modal" id="open-modal" data-target="#myModal">
    <div class="container">
        <div class="row">
            @foreach (var item in Model)
            {
                var image = @item.Name + ".jpg";
                <div class="col-lg-3 col-md-4 col-sm-4 col-xs-4">
                    <div class="card">
                        <img src="~/Images/Laptops/@image" alt="Avatar" width="180" height="100">
                        <div class="container">                            
                            <h5>@Html.DisplayFor(modelItem => item.Name)</h5>
                            <p class="secondary">Price: <i>$ @Html.DisplayFor(modelItem => item.PRICE)</i></p>
                            <p class="secondary pull-left"><i>Availability <span>@item.QTY</span></i></p>
                            <label class="text-info pull-right"><span class="click-link">@Html.ActionLink("Details", "Specs", new { id = item.Laptop_ID })</span></label>
                            <input id="@item.Laptop_ID" type="number" max='@item.QTY' min="1" value="1" class="form-control btn-sm pull-right" maxlength="2" size="2" style="width:52px;height:25px;margin-left:10px;" onblur="QtyCheck(this, this.value, '@item.QTY')" @(item.QTY < 1 ? "disabled" : null)/>
                            <input type="button" id="@item.Name" class="btn btn-success btn-xs pull-left" onclick="Add_To_Cart(this,'@item.Name','@item.PRICE','@item.Laptop_ID','@item.CPU_MODEL','@item.QTY')" value="Add to Card" @(item.QTY < 1 ? "disabled" : null)>
                        </div>
                    </div>
                </div>
            }
        </div>
        <div>
            <ul class="pagination" id="pager">
                @{ var pages = Math.Ceiling((int)Session["DataCount"] / 8.0);}
                @for (int i = 0; i < pages; i++)
                {
                    var label = i + 1;
                    if ((int)Session["CurrentPageIndex"] == i)
                    {
                        <li class="active"><a href="@Url.Action("Products", "Laptops", new { id = Session["UserChoice"], page = @i })">@label</a></li>
                    }
                    else
                    {
                        <li><a href="@Url.Action("Products", "Laptops", new { id = Session["UserChoice"], page = @i })">@label</a></li>
                    }


                }
            </ul>
        </div>
    </div>
    
   



    <script>

        CartLoad();//set up already bought items
        //number of laptops less than 8 does not display pager
        if ('@Session["DataCount"]' <= 8)
            document.getElementById("pager").innerHTML = "";

        function OrderLoad() {
            //get data
            let cookieArray = document.cookie.toString().trim().split(";");
            let isUserPos = document.cookie.toString().indexOf('@Session["userName"]');
            let cookieCount = document.cookie.toString().indexOf("&");
            
            if (cookieCount > -1 && '@Session["orderShowed"]' == 1 && isUserPos > -1) {
                var modal = document.getElementById("open-modal");
                //get container
                var container = document.getElementById("order-items");
                //prepare table
                let table_result = "<table class='table table-striped'><tr><th>Name</th><th>Quantity</th><th>Price</th><th>Total</th></tr>";
                let found = false;

                for (var i = 0; i < cookieArray.length; i++) {
                    let name = cookieArray[i].trim().split("=")[0].toString();
                    if (name.localeCompare('@Session["userName"]') == 0) {
                        let data = cookieArray[i].trim().split("=")[1];
                        var laptops_data = data.trim().split("&");
                        for (var i = 0; i < laptops_data.length - 1; i++) {
                            let name = laptops_data[i].trim().split("/")[0];
                            let price = laptops_data[i].trim().split("/")[1];
                            let qty = laptops_data[i].trim().split("/")[2];
                            let model = laptops_data[i].trim().split("/")[3];
                            table_result += "<tr><td><h4>" + name + "</h4><p class='secondary'>" + model + "</p></td>";
                            table_result += "<td>" + qty + "</td>";
                            table_result += "<td>$ " + price + "</td>";
                            table_result += "<td>$ " + (qty * price) + "</td>";
                            table_result += "</tr>";
                        }
                        break;//stop comparing user
                    }

                }
                table_result += "</table>";

                container.innerHTML = table_result;

                modal.click();
                $.post('@Url.Action("RunAction", "Login")',
                {
                    value: 2 //2 is situation after previous orders are showed
                }
            );
            }
        }


        function CartLoad() {
            for (i = 0; i < localStorage.length; i++) {
                var element = document.getElementById(localStorage.key(i));
                element.value = "Remove";
                element.style.backgroundColor = "#d9534f";
                element.style.border = 0;
                let value = localStorage.getItem(localStorage.key(i));
                let qtyField = value.toString().trim().split("/")[3];
                let qty = value.toString().trim().split("/")[1];
                document.getElementById(qtyField).value = qty;
                document.getElementById(qtyField).disabled = true;
            }
        }


        function Add_To_Cart(_this, _itemName, _itemPrice, _itemID, _itemModel, _limitedQty) {
            if (_this.value != "Remove") {
                _this.value = "Remove";
                document.getElementById(_itemID).disabled = true;
                _this.style.backgroundColor = "#d9534f";
                _this.style.border = 0;
                var qty = document.getElementById(_itemID).value;
                if (Number(qty) > _limitedQty) {
                    alert("Supplier provide maximum " + _limitedQty + " units for this item");
                    _this.value = "Add to Card";
                    document.getElementById(_itemID).disabled = false;
                    _this.style.backgroundColor = "#5cb85c";
                    _this.style.border = 1;
                    return false;
                }
                var itemValue = _itemPrice + "/" + qty + "/" + _itemModel + "/" + _itemID;
                localStorage.setItem(_itemName, itemValue);
                //update items amount
                document.getElementById("buy_items").innerHTML = localStorage.length;

            }

            else {
                _this.value = "Add to Card";
                document.getElementById(_itemID).disabled = false;
                _this.style.backgroundColor = "#5cb85c";
                _this.style.border = 1;
                localStorage.removeItem(_itemName);
                //update items count
                document.getElementById("buy_items").innerHTML = localStorage.length;
            }

        }

        function QtyCheck(_this, _userQty, _limtedQty) {
            if (parseInt(_userQty) > parseInt(_limtedQty)) {
                alert("You can buy maximum " + _limtedQty + " units");
                _this.value = _limtedQty;
            }
        }



        document.getElementById("buy_items").innerHTML = localStorage.length;

        document.getElementById("the_home").className = "";
        document.getElementById("the_category").className = "btn btn-primary dropdown-toggle";


    </script>

</body>